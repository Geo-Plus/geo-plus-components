{"version":3,"file":"geo-plus-components.es5.js","sources":["ts/geo-plus-components.ts","ts/src/app/modules/gpc-navbar/gpc-navbar.module.ts","ts/src/app/modules/gpc-navbar/gpc-navbar-item/gpc-navbar-item.component.ts","ts/src/app/modules/gpc-navbar/gpc-navbar.component.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {GpcNavbar} from './public_api';\n\nexport {GpcNavbarItemComponent as ɵb} from './src/app/modules/gpc-navbar/gpc-navbar-item/gpc-navbar-item.component';\nexport {GpcNavbarComponent as ɵa} from './src/app/modules/gpc-navbar/gpc-navbar.component';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GpcNavbarComponent } from './gpc-navbar.component';\nimport { GpcNavbarItemComponent } from './gpc-navbar-item/gpc-navbar-item.component';\nimport { RouterModule } from '@angular/router';\nexport class GpcNavbar { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        RouterModule.forRoot([{ path: '', redirectTo: '/', pathMatch: 'full' }], { useHash: true })\n    ],\n    declarations: [GpcNavbarComponent, GpcNavbarItemComponent],\n    exports: [GpcNavbarComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GpcNavbar_tsickle_Closure_declarations() {\n/** @type {?} */\nGpcNavbar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGpcNavbar.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input } from '@angular/core';\nexport class GpcNavbarItemComponent implements OnInit {\n\n     items:any;\n     level:number = 1;\nconstructor() { }\n/**\n * @return {?}\n */\nngOnInit() {\n        console.log(2, this.items);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'gpc-navbar-item',\n    template: `\n      <ul class=\"gpc-menu-drop-item\" [ngStyle]=\"{'z-index':level}\">\n          <li *ngFor=\"let item of items\">\n              <a href=\"#\" [routerLink]=\"item.routerLink\">\n                  <span class=\"fa \" *ngIf=\"item.icon\" [ngClass]=\"item.icon\"></span>\n                  {{ item.label }}\n                  <span class=\"gpc-icon-right fa fa-chevron-right\" *ngIf=\"item.items\"></span></a>\n              <gpc-navbar-item [level]=\"level + 1\" [ngClass]=\"{'-hasSubmenu':true}\" [items]=\"item.items\" *ngIf=\"item.items && item.items.length\"></gpc-navbar-item>\n          </li>\n      </ul>\n    `,\n    styles: [`\n      .gpc-icon-right {\n        float: right; }\n\n      .gpc-menu-drop-item {\n        min-width: 10em; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: Input },],\n'level': [{ type: Input },],\n};\n}\n\nfunction GpcNavbarItemComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nGpcNavbarItemComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGpcNavbarItemComponent.ctorParameters;\n/** @type {?} */\nGpcNavbarItemComponent.propDecorators;\n/** @type {?} */\nGpcNavbarItemComponent.prototype.items;\n/** @type {?} */\nGpcNavbarItemComponent.prototype.level;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { GpcNavbarItemComponent } from './gpc-navbar-item/gpc-navbar-item.component';\nexport class GpcNavbarComponent implements OnInit {\n\n     menu:any[] = [{\n            label: \"Test1\"\n        },\n        {\n            label: \"Test2\",\n            items: [{\n                label: \"Not very long test3\"\n            }, {\n                label: \"test4\",\n                items: [\n                    {\n                        label: \"Very long test test4.1\"\n                    },\n                    {\n                        label: \"test4.2\",\n                        routerLink: \"/dict\",\n                        items: [{\n                            label: \"test4.2.1\"\n                        },{\n                            label: \"test4.2.2\"\n                        }]\n                    }                    \n                ]\n            }, {\n                label: \"test5\"\n            }]\n        }\n    ];\nconstructor() { }\n/**\n * @return {?}\n */\nngOnInit() {\n        console.log(1, this.menu);\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'gpc-navbar',\n    template: `\n\n      <ul class=\"main-navigation\">\n          <li class=\"gpc-menu-item\" *ngFor=\"let item of menu\">\n              <a href=\"#\" [routerLink]=\"item.routerLink\">\n                  <span class=\"fa \" *ngIf=\"item.icon\" [ngClass]=\"item.icon\">*</span>\n                  {{ item.label }}\n                  <span class=\"gpc-icon-down fa fa-chevron-down\" *ngIf=\"item.items  && item.items.length\"></span>\n              </a>\n              <gpc-navbar-item [items]=\"item.items\" *ngIf=\"item.items && item.items.length\"></gpc-navbar-item>\n          </li>\n      </ul>\n    `,\n    styles: [`\n      /* $second-color: #1bc2a2; */\n      ul.main-navigation /deep/ li ul li {\n        border-top: 0; }\n\n      ul.main-navigation:before,\n      ul.main-navigation:after {\n        content: \" \";\n        /* 1 */\n        display: table;\n        /* 2 */ }\n\n      li.gpc-menu-item:hover a {\n        background: #464a4b;\n        color: white; }\n\n      ul.main-navigation:after {\n        clear: both; }\n\n      ul.main-navigation /deep/ {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n        background: #282a2b;\n        height: 2em;\n        /* This hides the dropdowns */\n        /* Display the dropdown */\n        /* Displays second level dropdowns to the right of the first level dropdown */\n        /* Simple clearfix */ }\n        ul.main-navigation /deep/ li {\n          display: block;\n          position: relative;\n          float: left;\n          background: #282a2b; }\n        ul.main-navigation /deep/ li ul {\n          display: none;\n          padding-left: 0;\n          -webkit-box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.2), 0px 3px 1px 0px rgba(0, 0, 0, 0.2), 0px 6px 12px 0px rgba(0, 0, 0, 0.15);\n                  box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.2), 0px 3px 1px 0px rgba(0, 0, 0, 0.2), 0px 6px 12px 0px rgba(0, 0, 0, 0.15); }\n        ul.main-navigation /deep/ li a {\n          display: block;\n          padding: 0.5em 1em;\n          text-decoration: none;\n          white-space: nowrap;\n          color: white;\n          height: 1em;\n          font-family: Roboto, Arial, Helvetica, sans-serif; }\n        ul.main-navigation /deep/ li a:hover {\n          color: white; }\n        ul.main-navigation /deep/ li:hover > gpc-navbar-item > ul {\n          display: block;\n          position: absolute; }\n        ul.main-navigation /deep/ li:hover li {\n          float: none; }\n        ul.main-navigation /deep/ li:hover a {\n          background: white;\n          color: #222; }\n        ul.main-navigation /deep/ li:hover li a:hover {\n          background: #2c3e50;\n          color: white; }\n        ul.main-navigation /deep/ ul ul {\n          left: 100%;\n          top: 0; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menu': [{ type: Input },],\n};\n}\n\nfunction GpcNavbarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nGpcNavbarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGpcNavbarComponent.ctorParameters;\n/** @type {?} */\nGpcNavbarComponent.propDecorators;\n/** @type {?} */\nGpcNavbarComponent.prototype.menu;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":";;;AGEA;IA8BA;QA5BK,IAAL,CAAA,IAAS,GAES,CAAA;gBADN,KAAK,EAEE,OAAA;aADV;YACD;gBACI,KAAK,EAEE,OAAA;gBADP,KAAK,EAEE,CAAA;wBADH,KAAK,EAEE,qBAAA;qBADV,EAEE;wBADC,KAAK,EAEE,OAAA;wBADP,KAAK,EAEE;4BADH;gCACI,KAAK,EAEE,wBAAA;6BADV;4BACD;gCACI,KAAK,EAEE,SAAA;gCADP,UAAU,EAEE,OAAA;gCADZ,KAAK,EAEE,CAAA;wCADH,KAAK,EAEE,WAAA;qCADV,EAEC;wCADE,KAAK,EAEE,WAAA;qCADV,CAEC;6BADL;yBACJ;qBACJ,EAEE;wBADC,KAAK,EAEE,OAAA;qBADV,CAEC;aADL;SACJ,CAEC;IAEN,CAAK;;;;IACL,qCACK,GADL;QACQ,OAAO,CACC,GAAC,CAAG,CAAC,EAAE,IAAA,CAAK,IAAC,CAAI,CAAC;IAAlC,CAAK;;CApCL;AAuCO,kBAAP,CAAA,UAAO,GAAoC;IAA3C,EACE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAArB,QAAQ,EACE,YAAA;gBAAV,QAAQ,EACE,glBAWT;gBACD,MAAM,EACE,CAAA,koEA8DP,CACC;aAAL,EACC,EAAG;CAAJ,CACC;;;;AAED,kBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAEA,EAFA,CAEA,CAAC;AAAK,kBAAP,CAAA,cAAO,GAAyD;IAEhE,MAAM,EADE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAExB,CADC;AD/HF;IAIA;QADK,IAAL,CAAA,KAAU,GAEU,CAAA,CAAE;IAEtB,CAAK;;;;IACL,yCACK,GADL;QACQ,OAAO,CACC,GAAC,CAAG,CAAC,EAAE,IAAA,CAAK,KAAC,CAAK,CAAC;IAAnC,CAAK;;CAVL;AAaO,sBAAP,CAAA,UAAO,GAAoC;IAA3C,EACE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAArB,QAAQ,EACE,iBAAA;gBAAV,QAAQ,EACE,8mBAST;gBACD,MAAM,EACE,CAAA,qHAKP,CACC;aAAL,EACC,EAAG;CAAJ,CACC;;;;AAED,sBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EAEA,EAFA,CAEA,CAAC;AAAK,sBAAP,CAAA,cAAO,GAAyD;IAEhE,OAAO,EADE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAE1B,OAAO,EADE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAEzB,CADC;ADtCF;IAAA;;;CAAA;AAEgC,SAAhC,CAAA,UAAgC,GAAoC;IADpE,EAEE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBADpB,OAAO,EAEE;oBADL,YAAY;oBACZ,YAAY,CAEC,OAAC,CAAO,CAAC,EAAE,IAAA,EAAM,EAAA,EAAI,UAAA,EAAY,GAAA,EAAK,SAAA,EAAW,MAAA,EAAO,CAAE,EAAE,EAAE,OAAA,EAAS,IAAA,EAAK,CAAE;iBAD9F;gBACD,YAAY,EAEE,CAAA,kBAAE,EAAmB,sBAAA,CAAuB;gBAD1D,OAAO,EAEE,CAAA,kBAAE,CAAkB;aADhC,EAEC,EAAG;CADJ,CAEC;;;;AAED,SAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADnBF;;GAEG;"}
